#!/bin/bash

# calculation must be set up to carry out a simple SCF cycle

lattice_param=$1 #the initial lattice parameter
max=$2 #the final lattice parameter
step=$3 #by how much the lattice parameter is incremented

ncores=$((`nproc --all`/2))

if [ ! -f energy.txt ]; then
        echo "# Lattice Parameter [A]; Volume [A^3]; Energy [eV]" > energy.txt
fi

while [ `python3 -c "print(int($lattice_param <= $max))"` -eq 1 ]; do
	
	if [ ! -d lattice_parameter_$lattice_param ]; then	
		
		mkdir lattice_parameter_$lattice_param
	
		cp INCAR lattice_parameter_$lattice_param
		cp POTCAR lattice_parameter_$lattice_param
		cp KPOINTS lattice_parameter_$lattice_param

		sed "s/lattice_parameter/$lattice_param/g" POSCAR > lattice_parameter_$lattice_param/POSCAR

		cd lattice_parameter_$lattice_param
		
		echo "Now running VASP at lattice parameter $lattice_param" # I think since "all output is appended to nohup.out", this should write it into the same file as all the other output
			
		run_vasp_stable

        	# distinguish between Bloechl smearing (-5) and other methods
	        if [ `awk '{FS = "="} /ISMEAR/ {print $2}' INCAR` == "-5" ]; then
        	        # Bloechl smearing - some extra lines are printed (Bloechl correction)
                	energy=`grep "energy" OUTCAR | tail -3 | head -1 | awk '{print $NF}'`
        	else
        	        energy=`grep "energy" OUTCAR | tail -1 | awk '{print $NF}'`
        	fi

		volume_line=`grep "volume" OUTCAR | tail -1`
		volume=`python3 -c "print('$volume_line'.split()[-1])"`

		echo $lattice_param $volume $energy >> ../energy.txt

		cd ..
	
	fi

	lattice_param=`echo $lattice_param + $step | bc`

done

cd lattice_parameter_$1
c2x --int POSCAR
cd ..

space_group=`cat nohup.out | tail -1 | awk '{print $NF}'`
echo $space_group

cp ~/bin/python_scripts/birch_murnaghan_eos_fit.py .
python3 birch_murnaghan_eos_fit.py $space_group

gnuplot energy_volume.gnu
