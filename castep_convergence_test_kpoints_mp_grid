#!/bin/bash

# run in directory containing input files for a CASTEP run

first_kpoint=$1
final_kpoint=$2
kpoint_step=$3

# auto-determine fileroot
name=`ls *.param`
fileroot=`python3 -c "print('$name'.split('.')[0])"`
ncores=`nproc --all`

if [ ! -f kpoint_mp_grid.txt ]; then
        echo "K-point grid; Total calculated energy per atom [eV]; Time [s]" >> kpoint_mp_grid.txt
fi

for kpoint in `seq $first_kpoint $kpoint_step $final_kpoint`; do
	
	mkdir ${kpoint}_kpoints	
	cp ${fileroot}.* ${kpoint}_kpoints
	cp *.usp* ${kpoint}_kpoints
	cp *pot* ${kpoint}_kpoints
	
	cd ${kpoint}_kpoints 
	
	sed -i "s/AAA/${kpoint}/gi" ${fileroot}.cell

	mpirun -n $ncores castep.mpi $fileroot

	# the output format for the energy is different between SOC and not SOC calculations, so here we determine which it is
	is_soc=`awk '/spin-orbit coupling/ {print $4}' ${fileroot}.castep`

	# the same goes for non-metallic (fix_occupancy=true) and metallic calculations
        is_non_metallic=`awk '/non-metallic/ {print}' ${fileroot}.castep`
        # this will be empty if the calculations is metallic

	if [ $is_soc == "off" ] && [ `python3 -c "print(int(not '$is_non_metallic'))"` -eq 1 ] || [ $is_soc == "on" ]; then
                # calculation is metallic and not spin-orbit coupled
                energy=`awk '/Final energy/ {print $5}' ${fileroot}.castep | tail -1`
        else
                energy=`awk '/Final energy/ {print $4}' ${fileroot}.castep | tail -1`
        fi
	
	time=`awk '/Total time/ {print $4}' ${fileroot}.castep`

	natoms=`grep "Total number of ions in cell" ${fileroot}.castep | awk 'BEGIN {FS="="}; {print $2}'`
        energy_per_atom=`python3 -c "print(float('$energy')/float('$natoms'))"`

        echo "$kpoint x $kpoint x $kpoint" $energy_per_atom $time >> ../kpoint_mp_grid.txt

	rm ${fileroot}.check ${fileroot}.bands ${fileroot}.castep_bin

	cd ..
done
