#!/bin/bash

lattice_param=$1 #the initial lattice parameter
max=$2 #the final lattice parameter
step=$3 #by how much the lattice parameter is incremented

# auto-determine fileroot
name=`ls *.eddp`
fileroot=${name%.*}

if [ ! -f energy.txt ]; then
        echo "# Lattice Parameter [A]; Volume [A^3]; Energy [eV]" > energy.txt 
fi

counter=0

while [ `python3 -c "print(int($lattice_param <= $max))"` -eq 1 ]; do
	
	if [ ! -d lattice_parameter_$lattice_param ]; then	
		
		mkdir lattice_parameter_$lattice_param
		awk '{print "../" $0}' ${fileroot}.eddp > lattice_parameter_${lattice_param}/${fileroot}.eddp
	
		sed "s/lattice_parameter/$lattice_param/g" ${fileroot}.cell > lattice_parameter_$lattice_param/${fileroot}.cell

		cd lattice_parameter_$lattice_param
		
		echo "Now running repose at lattice parameter $lattice_param" # I think since "all output is appended to nohup.out", this should write it into the same file as all the other output
			
		repose -n $fileroot > ${fileroot}.out &

        	cd ..

        	counter=$((counter+1))

	fi

	lattice_param=`echo $lattice_param + $step | bc`
        	
	if [ $counter -eq $NCORES ]; then
		wait
               	# all jobs are done; next num_cores jobs can be started
               	counter=0

       	fi

done

wait

# do the same loop again to read output data

lattice_param=$1 # reset to initial lattice parameter

while [ `python3 -c "print(int($lattice_param <= $max))"` -eq 1 ]; do

	energy=`awk '/Energy/ {print $2}' lattice_parameter_$lattice_param/${fileroot}.out`
	volume=`awk '/Volume/ {print $2}' lattice_parameter_$lattice_param/${fileroot}.out`
	echo $lattice_param $volume $energy >> energy.txt

	lattice_param=`echo $lattice_param + $step | bc`

done

c2x --int lattice_parameter_${1}/${fileroot}.cell
space_group=`cat nohup.out | tail -1 | awk '{print $NF}'`

cp ~/bin/python_scripts/birch_murnaghan_eos_fit.py .
python3 birch_murnaghan_eos_fit.py $space_group

gnuplot energy_volume.gnu
